(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6700],{88518:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/worksheet",function(){return t(59877)}])},41957:function(e,n,t){"use strict";t.d(n,{F:function(){return d}});var r=t(97458),o=t(67778),i=t(31321);t(52983);var a=t(53398);let s=(e,n)=>{let{query:t,push:r}=(0,a.useRouter)(),o=e.map(e=>{let{render:n,...t}=e;return t}),i=t[n],s=i&&!Array.isArray(i)?i:e[0].id;return{activeContent:e.find(e=>e.id===s),activePills:s?[s]:[],pills:o,handlePillClick:e=>{r({query:{...t,[n]:e}},void 0,{scroll:!1,shallow:!0})}}},l=e=>{let{routes:n,id:t}=e,{activeContent:a,activePills:l,pills:d,handlePillClick:c}=s(n,t);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.N,{activePills:l,items:d,onPillClick:c}),(0,r.jsx)(i.x,{marginTop:"xSmall",children:null==a?void 0:a.render()})]})},d=e=>0===e.routes.length?null:(0,r.jsx)(l,{...e})},22465:function(e,n,t){"use strict";t.d(n,{t:function(){return c}});var r=t(97458),o=t(76635),i=t(39270),a=t(83273),s=t(31321),l=t(31962),d=t(62831);t(52983);let c=e=>{let{recommended:n,discouraged:t}=e;return(0,r.jsxs)(r.Fragment,{children:[n.length>0&&(0,r.jsx)(o.W,{columns:[{header:"Do",hash:"do",render:e=>{let{recommend:n}=e;return n}}],items:n.map(e=>({recommend:(0,r.jsxs)(i.k,{alignItems:"center",children:[(0,r.jsx)(a.B,{flexGrow:0,marginRight:"large",children:(0,r.jsx)(l.r,{color:"success"})}),(0,r.jsx)(a.B,{children:e})]})}))}),t.length>0&&(0,r.jsx)(s.x,{marginTop:"xLarge",children:(0,r.jsx)(o.W,{columns:[{header:"Don't",hash:"dont",render:e=>{let{discourage:n}=e;return n}}],items:t.map(e=>({discourage:(0,r.jsxs)(i.k,{alignItems:"center",children:[(0,r.jsx)(a.B,{flexGrow:0,marginRight:"large",children:(0,r.jsx)(d.P,{color:"danger"})}),(0,r.jsx)(a.B,{children:e})]})}))})})]})}},29676:function(e,n,t){"use strict";t.d(n,{p:function(){return s}});var r=t(97458),o=t(4857),i=t(75246),a=t.n(i);t(52983);let s=e=>{let{children:n,href:t}=e;return(0,r.jsx)(a(),{href:t,legacyBehavior:!0,passHref:!0,children:(0,r.jsx)(o.r,{children:n})})}},5423:function(e,n,t){"use strict";t.d(n,{n:function(){return p}});var r=t(97458),o=t(2513),i=t(89983),a=t(39270),s=t(4857),l=t(52983),d=t(63692),c=t(30765),u=t(76249);let h=(0,t(57931).ZP)(a.k).withConfig({componentId:"sc-e6496ff5-0"})(["cursor:pointer;display:inline-flex;flex-direction:row;"]),m=e=>{let{children:n,title:t}=e,[o,a]=(0,l.useState)(!0),s=()=>a(!o);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(h,{alignItems:"center",marginBottom:"xSmall",onClick:s,onKeyPress:e=>{("Enter"===e.key||" "===e.key)&&s()},tabIndex:0,children:[o?(0,r.jsx)(c.X,{title:"Expand"}):(0,r.jsx)(u.h,{title:"Collapse"}),(0,r.jsx)(i.xv,{children:t})]}),!o&&n]})},p=e=>{let{collapsible:n,id:t,propList:s,title:l,inheritedProps:c,nativeElement:u}=e,h=()=>s.length>0?(0,r.jsxs)(o.r,{marginBottom:n||c?"xLarge":"none",children:[(0,r.jsx)(o.i,{columns:[{header:"Prop name",hash:"propName",render:e=>{let{name:n,required:t}=e;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d.E,{primary:!0,children:n}),t?(0,r.jsx)("b",{children:" *"}):null]})}},{header:"Type",hash:"type",render:e=>{let{types:n}=e;return(0,r.jsx)(b,{types:n})}},{header:"Default",hash:"default",render:e=>{let{defaultValue:n}=e;return(0,r.jsx)(d.E,{highlight:!1,children:n})}},{header:"Description",hash:"description",width:"50%",render:e=>{let{description:n}=e;return(0,r.jsx)(i.xv,{children:n})}}],id:t,items:s}),(0,r.jsx)(i.x4,{marginTop:"xSmall",children:"Props ending with * are required"})]}):null;return n?(0,r.jsx)(m,{title:"".concat(l," Props"),children:h()}):(0,r.jsxs)(r.Fragment,{children:[(()=>{if(u){let[e,n]=u;return(0,r.jsxs)(i.xv,{children:["Supports ",n," native ",(0,r.jsxs)(d.E,{children:["<",e," />"]})," element attributes."]})}return null})(),h(),c?(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.H3,{children:"Inherited"}),(0,r.jsx)(a.k,{flexDirection:"column",children:c})]}):null]})},y=e=>{let{type:n}=e;return(0,l.isValidElement)(n)&&n.type===s.r?(0,r.jsx)(d.E,{highlight:!1,children:n}):(0,r.jsx)(d.E,{children:n})},b=e=>{let{types:n}=e;return Array.isArray(n)?n.map((e,t)=>(0,r.jsxs)(l.Fragment,{children:[(0,r.jsx)(y,{type:e}),t<n.length-1?" | ":null]},(0,l.isValidElement)(e)&&e.key?e.key:t)):(0,r.jsx)(y,{type:n})}},59877:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return O}});var r=t(97458),o=t(79609),i=t(89983),a=t(81237);t(52983);var s=t(63692),l=t(38933),d=t(41957),c=t(84210),u=t(22465),h=t(29676),m=t(5423);let p=[{name:"columns",types:[(0,r.jsx)(h.p,{href:{hash:"worksheet-text-column-prop-table",query:{props:"text-column"}},children:"TextColumn"},"text"),(0,r.jsx)(h.p,{href:{hash:"worksheet-number-column-prop-table",query:{props:"number-column"}},children:"NumberColumn"},"number"),(0,r.jsx)(h.p,{href:{hash:"worksheet-checkbox-column-prop-table",query:{props:"checkbox-column"}},children:"CheckboxColumn"},"checkbox"),(0,r.jsx)(h.p,{href:{hash:"worksheet-selectable-column-prop-table",query:{props:"selectable-column"}},children:"SelectableColumn"},"selectable"),(0,r.jsx)(h.p,{href:{hash:"worksheet-modal-column-prop-table",query:{props:"modal-column"}},children:"ModalColumn"},"modal")],description:(0,r.jsxs)(r.Fragment,{children:["Columns will be of type"," ",(0,r.jsx)(h.p,{href:{hash:"worksheet-text-column-prop-table",query:{props:"text-column"}},children:"TextColumn"})," ","by default."]}),required:!0},{name:"expandableRows",types:"[key: string]: Array<string | number>;",description:"Accepts an object with parent ids as keys and an array of child ids that will be hidden on render."},{name:"defaultExpandedRows",types:"Array<string | number>",description:"Accepts an array with parent ids that will be expanded by default."},{name:"disabledRows",types:"Array<string | number>",description:"Accepts an array with ids of rows that will be disabled."},{name:"items",types:"any[]",description:"The array of items to display.",required:!0},{name:"onChange",types:"(items: any[]) => void",description:"Returns the items that have been updated.",required:!0},{name:"onErrors",types:"(items: WorksheetError[]) => void",description:(0,r.jsxs)(r.Fragment,{children:["Returns an array of"," ",(0,r.jsx)(h.p,{href:{hash:"worksheet-error-prop-table",query:{props:"error"}},children:"Error"})," ","when an error is present."]})},{name:"minWidth",types:"number",description:"Sets a min-width."},{name:"localization",types:"{ toggleRowExpanded: string }",description:"Overrides the label with localized text."}],y=[{name:"hash",types:"string",required:!0,description:"Unique identifier for the column value of each row. Used internally to identify and manage state values."},{name:"header",types:"string",required:!0,description:"Header for the column."},{name:"type",types:"text",defaultValue:"text",description:"Sets the cell type of the column."},{name:"formatting",types:"(value: any) => string",description:"Used to format the value of a cell."},{name:"validation",types:"(value: any) => boolean",description:"Will set a cell as invalid if it returns false."},{name:"notation",types:"(value: any, row: any; }) => { color: keyof Colors; description: string; } | undefined",description:"Used to provide a way to show additional notes/comments/instructions on a particular cell."},{name:"disabled",types:"boolean",description:"Disables cell manipulation for the entire column."},{name:"enabled",types:"boolean",description:"Enables cell manipulation for the entire column even when a row is disabled."},{name:"width",types:["string","number"],description:"Sets column width."},{name:"tooltip",types:"string",description:"Tooltip for the worksheet column header."}],b=[{name:"hash",types:"string",required:!0,description:"Unique identifier for the column value of each row. Used internally to identify and manage state values."},{name:"header",types:"string",required:!0,description:"Header for the column."},{name:"type",types:"number",required:!0,description:"Sets the cell type of the column."},{name:"formatting",types:"(value: any) => string",description:"Used to format the value of a cell."},{name:"validation",types:"(value: any) => boolean",description:"Function to test the validity of the cell."},{name:"notation",types:"(value: any, row: any; }) => { color: keyof Colors; description: string; } | undefined",description:"Used to provide a way to show additional notes/comments/instructions on a particular cell."},{name:"disabled",types:"boolean",description:"Disables cell manipulation for the entire column."},{name:"enabled",types:"boolean",description:"Enables cell manipulation for the entire column even when a row is disabled."},{name:"width",types:["string","number"],description:"Sets column width."},{name:"tooltip",types:"string",description:"Tooltip for the worksheet column header."}],x=[{name:"hash",types:"string",required:!0,description:"Unique identifier for the column value of each row. Used internally to identify and manage state values."},{name:"header",types:"string",required:!0,description:"Header for the column."},{name:"type",types:"checkbox",required:!0,description:"Sets the cell type of the column."},{name:"validation",types:"(value: any) => boolean",description:"Function to test the validity of the cell."},{name:"notation",types:"(value: any, row: any; }) => { color: keyof Colors; description: string; } | undefined",description:"Used to provide a way to show additional notes/comments/instructions on a particular cell."},{name:"disabled",types:"boolean",description:"Disables cell manipulation for the entire column."},{name:"enabled",types:"boolean",description:"Enables cell manipulation for the entire column even when a row is disabled."},{name:"width",types:["string","number"],description:"Sets column width."},{name:"tooltip",types:"string",description:"Tooltip for the worksheet column header."}],f=[{name:"hash",types:"string",required:!0,description:"Unique identifier for the column value of each row. Used internally to identify and manage state values."},{name:"header",types:"string",required:!0,description:"Header for the column."},{name:"type",types:"select",required:!0,description:"Sets the cell type of the column."},{name:"validation",types:"(value: any) => boolean",description:"Function to test the validity of the cell."},{name:"notation",types:"(value: any, row: any; }) => { color: keyof Colors; description: string; } | undefined",description:"Used to provide a way to show additional notes/comments/instructions on a particular cell."},{name:"config",types:(0,r.jsx)(h.p,{href:{hash:"worksheet-selectable-config-prop-table",query:{props:"selectable-config"}},children:"SelectableConfig"}),description:(0,r.jsxs)(r.Fragment,{children:["See"," ",(0,r.jsx)(h.p,{href:{hash:"worksheet-selectable-config-prop-table",query:{props:"selectable-config"}},children:"SelectableConfig"})," ","for usage."]})},{name:"disabled",types:"boolean",description:"Disables cell manipulation for the entire column."},{name:"enabled",types:"boolean",description:"Enables cell manipulation for the entire column even when a row is disabled."},{name:"width",types:["string","number"],description:"Sets column width."},{name:"tooltip",types:"string",description:"Tooltip for the worksheet column header."}],g=[{name:"hash",types:"string",required:!0,description:"Unique identifier for the column value of each row. Used internally to identify and manage state values."},{name:"header",types:"string",required:!0,description:"Header for the column."},{name:"type",types:"modal",required:!0,description:"Sets the cell type of the column."},{name:"formatting",types:"(value: any) => string",description:"Used to format the value of a cell."},{name:"validation",types:"(value: any) => boolean",description:"Function to test the validity of the cell."},{name:"notation",types:"(value: any, row: any; }) => { color: keyof Colors; description: string; } | undefined",description:"Used to provide a way to show additional notes/comments/instructions on a particular cell."},{name:"config",types:(0,r.jsx)(h.p,{href:{hash:"worksheet-modal-config-prop-table",query:{props:"modal-config"}},children:"ModalConfig"}),description:(0,r.jsxs)(r.Fragment,{children:["See"," ",(0,r.jsx)(h.p,{href:{hash:"worksheet-modal-config-prop-table",query:{props:"modal-config"}},children:"ModalConfig"})," ","for usage."]})},{name:"disabled",types:"boolean",description:"Disables cell manipulation for the entire column."},{name:"enabled",types:"boolean",description:"Enables cell manipulation for the entire column even when a row is disabled."},{name:"width",types:["string","number"],description:"Sets column width."},{name:"tooltip",types:"string",description:"Tooltip for the worksheet column header."}],v=[{name:"options",types:"Array<SelectOption> | Array<SelectOptionGroup>",required:!0,description:(0,r.jsxs)(r.Fragment,{children:["Accepts an array of ",(0,r.jsx)(s.E,{children:"SelectOptions"})," or an array of"," ",(0,r.jsx)(s.E,{children:"SelectOptionGroups"}),". See examples for usage."]})}],w=[{name:"cancelActionText",types:"string",defaultValue:"Cancel",description:"Sets custom text for cancel action."},{name:"header",types:"string",description:"Header for the column."},{name:"saveActionText",types:"string",defaultValue:"Save",description:"Sets custom text for save action."},{name:"render",types:"React.ComponentType",required:!0,description:"Content to render in Modal."}],j=[{name:"item",types:"any",description:"Item with errored cell."},{name:"error",types:"any[]",description:"Keys of cells with errors."}],k=e=>(0,r.jsx)(m.n,{propList:p,title:"Worksheet",...e}),C=e=>(0,r.jsx)(m.n,{propList:y,title:"Worksheet[TextColumn]",...e}),F=e=>(0,r.jsx)(m.n,{propList:b,title:"Worksheet[NumberColumn]",...e}),P=e=>(0,r.jsx)(m.n,{propList:x,title:"Worksheet[CheckboxColumn]",...e}),N=e=>(0,r.jsx)(m.n,{propList:f,title:"Worksheet[SelectableColumn]",...e}),E=e=>(0,r.jsx)(m.n,{propList:g,title:"Worksheet[ModalColumn]",...e}),T=e=>(0,r.jsx)(m.n,{propList:v,title:"Worksheet[SelectableConfig]",...e}),W=e=>(0,r.jsx)(m.n,{propList:w,title:"Worksheet[ModalConfig]",...e}),S=e=>(0,r.jsx)(m.n,{propList:j,title:"Worksheet[Error]",...e}),q={0:"Category 0",1:"Category 1",2:"Category 2",3:"Category 3",4:"Category 4",5:"Category 5",6:"Category 6",7:"Category 7",8:"Category 8",9:"Category 9"},A=[{id:"0",value:0,label:"Category 0",children:[{id:"5",value:5,label:"Category 5",children:[{id:"9",value:9,label:"Category 9"}]}]},{id:"1",value:1,label:"Category 1",children:[{id:"6",value:6,label:"Category 6"}]},{id:"2",value:2,label:"Category 2"},{id:"3",value:3,label:"Category 3",children:[{id:"7",value:7,label:"Category 7"}]},{id:"4",value:4,label:"Category 4",children:[{id:"8",value:8,label:"Category 8"}]}],V=(e,n)=>(0,r.jsx)(o.Q,{defaultExpanded:["0","5","1"],defaultSelected:[String(e)],disabledNodes:["1"],nodes:A,onSelectionChange:e=>n(e[0]),selectable:"radio"});var O=()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.H1,{children:"Worksheet"}),(0,r.jsxs)(a.s,{header:"Overview",headerId:"overview",children:[(0,r.jsxs)(i.xv,{children:[(0,r.jsx)(s.E,{primary:!0,children:"Worksheet"})," displays information about a collection of objects and allow the merchant to manage and edit object data."]}),(0,r.jsx)(i.xv,{bold:!0,children:"When to use:"}),(0,r.jsxs)(l.a,{children:[(0,r.jsx)(l.a.Item,{children:"To display and edit information across a large data set (e.x. products, customers, inventory, price lists)."}),(0,r.jsx)(l.a.Item,{children:"To quickly scan and compare information in order to identify patterns, transform data, or augment with additional details."}),(0,r.jsxs)(l.a.Item,{children:["Unlike ",(0,r.jsx)(s.E,{primary:!0,children:"Tables"}),", a ",(0,r.jsx)(s.E,{primary:!0,children:"Worksheet"})," component is actionable and interactive and should be used in situations where editing is the primary purpose."]})]})]}),(0,r.jsx)(a.s,{header:"Implementation",headerId:"implementation",children:(0,r.jsx)(d.F,{id:"implementation",routes:[{id:"basic",title:"Basic",render:()=>(0,r.jsx)(c.G,{scope:{CATEGORIES:q,CategoryTree:V,nodes:A},children:"function Example() {\n  const columns: Array<WorksheetColumn<Product>> = [\n    {\n      hash: 'productName',\n      header: 'Product name',\n      validation: (value) => !!value,\n      notation: (value) => {\n        switch (value) {\n          case 'Product 1':\n            return {\n              color: 'danger',\n              description: 'Change value to 2',\n            };\n\n          case '2':\n            return {\n              color: 'warning40',\n              description: 'To make it green change it to 3',\n            };\n\n          case '3':\n            return {\n              color: 'success',\n              description: 'Value is equal 3',\n            };\n        }\n      },\n      width: 200,\n      tooltip: 'Tooltip text',\n    },\n    { hash: 'isVisible', header: 'Visible', type: 'checkbox', width: 80 },\n    { hash: 'otherField', header: 'Other field' },\n    {\n      hash: 'otherField2',\n      header: 'Other field',\n      type: 'select',\n      config: {\n        options: [\n          { value: 'option-1', content: 'Option 1' },\n          { value: 'option-2', content: 'Option 2' },\n          { value: 'option-3', content: 'Option 3' },\n        ],\n      },\n      validation: (value) => !!value,\n      width: 200,\n    },\n    {\n      hash: 'otherField3',\n      header: 'Category',\n      type: 'modal',\n      config: {\n        header: 'Choose categories',\n        render: CategoryTree,\n      },\n      formatting: (value: number) => CATEGORIES[value],\n    },\n    {\n      hash: 'numberField',\n      header: 'Number field',\n      type: 'number',\n      formatting: (value: number) => `$${value}.00`,\n      validation: (value: number) =>\n        typeof value === 'number' && !Number.isNaN(value),\n      width: 100,\n    },\n  ];\n\n  const items: Array<Partial<Product>> = [\n    {\n      id: 1,\n      productName: 'Product 1',\n      isVisible: true,\n      otherField: 'Text',\n      otherField2: 'option-1',\n      otherField3: 2,\n      numberField: 50,\n    },\n    {\n      id: 2,\n      productName: 'Product 2',\n      isVisible: true,\n      otherField: 'Text',\n      otherField2: 'option-1',\n      otherField3: 6,\n      numberField: 50,\n    },\n    {\n      id: 3,\n      productName: 'Product 3',\n    },\n    {\n      id: 4,\n      productName: 'Variant 1',\n      isVisible: true,\n      otherField: 'Text',\n      otherField2: 'option-2',\n      otherField3: 9,\n      numberField: 50,\n    },\n    {\n      id: 5,\n      productName: '',\n      isVisible: true,\n      otherField: 'Text',\n      otherField2: '',\n      otherField3: 4,\n      numberField: 50,\n    },\n    {\n      id: 6,\n      productName: 'Variant 3',\n      isVisible: true,\n      otherField: 'Text',\n      otherField2: '',\n      otherField3: 3,\n      numberField: 50,\n    },\n    {\n      id: 7,\n      productName: 'Variant 4',\n      isVisible: false,\n      otherField: 'Text',\n      otherField2: 'option-2',\n      otherField3: 4,\n      numberField: 50,\n    },\n    {\n      id: 8,\n      productName: 'Product 4',\n      isVisible: true,\n      otherField: 'Text',\n      otherField2: 'option-2',\n      otherField3: 7,\n      numberField: 50,\n    },\n    {\n      id: 9,\n      productName: 'Product 5',\n      isVisible: true,\n      otherField: 'Text',\n      otherField2: 'option-2',\n      otherField3: 3,\n      numberField: 50,\n    },\n    {\n      id: 10,\n      productName: 'Product 6',\n      isVisible: true,\n      otherField: 'Text',\n      otherField2: 'option-3',\n      otherField3: 3,\n      numberField: 50,\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      items={items}\n      minWidth={900}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"basic")},{id:"text-columns",title:"Text columns",render:()=>(0,r.jsx)(c.G,{children:"function Example() {\n  const columns: Array<WorksheetColumn<Partial<Product>>> = [\n    {\n      hash: 'productName',\n      header: 'Product name',\n      validation: (value) => !!value,\n    },\n    { hash: 'otherField', header: 'Other field' },\n  ];\n\n  const items: Array<Partial<Product>> = [\n    {\n      id: 1,\n      productName: 'Product 1',\n      otherField: 'Text',\n    },\n    {\n      id: 2,\n      productName: 'Product 2',\n      otherField: 'Text',\n    },\n    {\n      id: 3,\n      productName: 'Product 3',\n      otherField: 'Text',\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      items={items}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"text-columns")},{id:"number-columns",title:"Number columns",render:()=>(0,r.jsx)(c.G,{scope:{CATEGORIES:q,CategoryTree:V,nodes:A},children:"function Example() {\n  const columns: Array<\n    WorksheetColumn<{ id: number; cost: number; stock: number }>\n  > = [\n    {\n      hash: 'cost',\n      header: 'Cost',\n      type: 'number',\n      formatting: (value: number) => `$${value}.00`,\n      validation: (value: number) =>\n        typeof value === 'number' && !Number.isNaN(value),\n    },\n    {\n      hash: 'stock',\n      header: 'Stock',\n      type: 'number',\n      validation: (value: number) =>\n        typeof value === 'number' && !Number.isNaN(value),\n    },\n  ];\n\n  const items: Array<{ id: number; cost: number; stock: number }> = [\n    {\n      id: 1,\n      cost: 100,\n      stock: 3,\n    },\n    {\n      id: 2,\n      cost: 200,\n      stock: 10,\n    },\n    {\n      id: 3,\n      cost: 300,\n      stock: 5,\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      items={items}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"number-columns")},{id:"checkbox-columns",title:"Checkbox columns",render:()=>(0,r.jsx)(c.G,{children:"function Example() {\n  const columns: Array<WorksheetColumn<Partial<Product>>> = [\n    {\n      hash: 'productName',\n      header: 'Product name',\n      validation: (value) => !!value,\n    },\n    { hash: 'isVisible', header: 'Visible', type: 'checkbox' },\n  ];\n\n  const items: Array<Partial<Product>> = [\n    {\n      id: 1,\n      productName: 'Product 1',\n      isVisible: true,\n    },\n    {\n      id: 2,\n      productName: 'Product 2',\n      isVisible: false,\n    },\n    {\n      id: 3,\n      productName: 'Product 3',\n      isVisible: false,\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      items={items}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"checkbox-columns")},{id:"selectable-columns",title:"Selectable columns",render:()=>(0,r.jsx)(c.G,{children:"function Example() {\n  const columns: Array<WorksheetColumn<Partial<Product>>> = [\n    {\n      hash: 'productName',\n      header: 'Product name',\n      validation: (value) => !!value,\n    },\n    {\n      hash: 'otherField2',\n      header: 'Other field',\n      type: 'select',\n      config: {\n        options: [\n          { value: 'option-1', content: 'Option 1' },\n          { value: 'option-2', content: 'Option 2' },\n          { value: 'option-3', content: 'Option 3' },\n        ],\n      },\n      validation: (value) => !!value,\n    },\n  ];\n\n  const items: Array<Partial<Product>> = [\n    {\n      id: 1,\n      productName: 'Product 1',\n      otherField2: 'option-1',\n    },\n    {\n      id: 2,\n      productName: 'Product 2',\n      otherField2: 'option-2',\n    },\n    {\n      id: 3,\n      productName: 'Product 3',\n      otherField2: 'option-3',\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      items={items}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"selectable-columns")},{id:"modal-columns",title:"Modal columns",render:()=>(0,r.jsx)(c.G,{scope:{CATEGORIES:q,CategoryTree:V,nodes:A},children:"function Example() {\n  const columns: Array<WorksheetColumn<Partial<Product>>> = [\n    {\n      hash: 'productName',\n      header: 'Product name',\n      validation: (value) => !!value,\n    },\n    {\n      hash: 'otherField3',\n      header: 'Category',\n      type: 'modal',\n      config: {\n        header: 'Choose categories',\n        render: CategoryTree,\n      },\n      formatting: (value: number) => CATEGORIES[value],\n    },\n  ];\n\n  const items: Array<Partial<Product>> = [\n    {\n      id: 1,\n      productName: 'Product 1',\n      otherField3: 1,\n    },\n    {\n      id: 2,\n      productName: 'Product 2',\n      otherField3: 2,\n    },\n    {\n      id: 3,\n      productName: 'Product 3',\n      otherField3: 3,\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      items={items}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"modal-columns")},{id:"disabled-columns",title:"Disabled columns",render:()=>(0,r.jsx)(c.G,{children:"function Example() {\n  const columns: Array<WorksheetColumn<Partial<Product>>> = [\n    {\n      hash: 'productName',\n      header: 'Product name',\n      validation: (value) => !!value,\n    },\n    { hash: 'otherField', header: 'Other field', disabled: true },\n  ];\n\n  const items: Array<Partial<Product>> = [\n    {\n      id: 1,\n      productName: 'Product 1',\n      otherField: 'Text',\n    },\n    {\n      id: 2,\n      productName: 'Product 2',\n      otherField: 'Text',\n    },\n    {\n      id: 3,\n      productName: 'Product 3',\n      otherField: 'Text',\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      items={items}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"disabled-columns")},{id:"expandable-rows",title:"Expandable rows",render:()=>(0,r.jsx)(c.G,{children:"function Example() {\n  const columns: Array<WorksheetColumn<Partial<Product>>> = [\n    {\n      hash: 'productName',\n      header: 'Product name',\n      validation: (value) => !!value,\n    },\n    { hash: 'otherField', header: 'Other field' },\n  ];\n\n  const expandableRows = {\n    2: [3],\n    4: [5, 6],\n  };\n\n  const items: Array<Partial<Product>> = [\n    {\n      id: 1,\n      productName: 'Product 1',\n      otherField: 'Text',\n    },\n    {\n      id: 2,\n      productName: 'Product 2',\n      otherField: 'Text',\n    },\n    {\n      id: 3,\n      productName: 'Product 3',\n      otherField: 'Text',\n    },\n    {\n      id: 4,\n      productName: 'Product 4',\n      otherField: 'Text',\n    },\n    {\n      id: 5,\n      productName: 'Product 5',\n      otherField: 'Text',\n    },\n    {\n      id: 6,\n      productName: 'Product 6',\n      otherField: 'Text',\n    },\n    {\n      id: 7,\n      productName: 'Product 7',\n      otherField: 'Text',\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      defaultExpandedRows={[4]}\n      expandableRows={expandableRows}\n      items={items}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"expandable-rows")},{id:"disabled-rows",title:"Disabled rows",render:()=>(0,r.jsx)(c.G,{children:"function Example() {\n  const columns: Array<WorksheetColumn<Partial<Product>>> = [\n    {\n      hash: 'productName',\n      header: 'Product name',\n      validation: (value) => !!value,\n    },\n    { hash: 'otherField', header: 'Other field' },\n  ];\n\n  const disabledRows = [2, 4];\n\n  const items: Array<Partial<Product>> = [\n    {\n      id: 1,\n      productName: 'Product 1',\n      otherField: 'Text',\n    },\n    {\n      id: 2,\n      productName: 'Product 2',\n      otherField: 'Text',\n    },\n    {\n      id: 3,\n      productName: 'Product 3',\n      otherField: 'Text',\n    },\n    {\n      id: 4,\n      productName: 'Product 4',\n      otherField: 'Text',\n    },\n    {\n      id: 5,\n      productName: 'Product 5',\n      otherField: 'Text',\n    },\n  ];\n\n  return (\n    <Worksheet\n      columns={columns}\n      disabledRows={disabledRows}\n      items={items}\n      onChange={(items) => items}\n      onErrors={(items) => items}\n    />\n  );\n}"},"disabled-rows")}]})}),(0,r.jsx)(a.s,{header:"Props",headerId:"props",children:(0,r.jsx)(d.F,{id:"props",routes:[{id:"worksheet",title:"Worksheet",render:()=>(0,r.jsx)(k,{})},{id:"text-column",title:"TextColumn",render:()=>(0,r.jsx)(C,{id:"worksheet-text-column-prop-table"})},{id:"number-column",title:"NumberColumn",render:()=>(0,r.jsx)(F,{id:"worksheet-number-column-prop-table"})},{id:"checkbox-column",title:"CheckboxColumn",render:()=>(0,r.jsx)(P,{id:"worksheet-checkbox-column-prop-table"})},{id:"selectable-column",title:"SelectableColumn",render:()=>(0,r.jsx)(N,{id:"worksheet-selectable-column-prop-table"})},{id:"modal-column",title:"ModalColumn",render:()=>(0,r.jsx)(E,{id:"worksheet-modal-column-prop-table"})},{id:"selectable-config",title:"SelectableConfig",render:()=>(0,r.jsx)(T,{id:"worksheet-selectable-config-prop-table"})},{id:"modal-config",title:"ModalConfig",render:()=>(0,r.jsx)(W,{id:"worksheet-modal-config-prop-table"})},{id:"error",title:"Error",render:()=>(0,r.jsx)(S,{id:"worksheet-error-prop-table"})}]})}),(0,r.jsx)(a.s,{header:"Do's and Don'ts",headerId:"guidelines",children:(0,r.jsx)(u.t,{discouraged:[(0,r.jsxs)(r.Fragment,{children:["Never use the ",(0,r.jsx)(s.E,{primary:!0,children:"Worksheet"})," component to display a simple list of related content. Instead use a ",(0,r.jsx)(h.p,{href:"/table",children:"Table"}),"."]}),"Editing or actions should always be initiated directly on a cell.  Do not use the actions icon/menu."],recommended:[(0,r.jsxs)(r.Fragment,{children:["Always display a ",(0,r.jsx)(s.E,{primary:!0,children:"Worksheet"})," component with collapsed side navigation."]}),"Column header names should use sentence case, be concise and describe the type of content displayed in that column.","Each row contains information related to a single entity.","Each cell contains either a single data point or groups of data from a multi-select interaction (e.g. categories).","Interactive elements per cell include: text/numerical input, subtle buttons which open a modal, checkboxes and drop downs.",(0,r.jsxs)(r.Fragment,{children:["Show the total number of items at the top of the ",(0,r.jsx)(s.E,{primary:!0,children:"Worksheet"}),"."]}),(0,r.jsxs)(r.Fragment,{children:["Use the ",(0,r.jsx)(s.E,{primary:!0,children:"Worksheet"})," for bulk editing actions."]}),(0,r.jsxs)(r.Fragment,{children:["A ",(0,r.jsx)(s.E,{primary:!0,children:"Worksheet"})," should always be on it’s own page. Never combine a worksheet with other tables or panels of content."]})]})})]})}},function(e){e.O(0,[1814,9905,6417,3599,6295,6278,1605,7830,6710,2888,9774,179],function(){return e(e.s=88518)}),_N_E=e.O()}]);