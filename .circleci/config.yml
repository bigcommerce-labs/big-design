version: 2.1
orbs:
  node: circleci/node@5.1.0

#################################################################################
# Aliases
#################################################################################
default_executor: &default_executor
  executor:
    name: node/default
    tag: '20.12'

filter_branch: &filter_branch
  filters:
    branches:
      ignore: gh-pages

#################################################################################
# Commands
#################################################################################
commands:
  pre-setup:
    steps:
      - checkout
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable --install-directory ~/bin
            corepack prepare pnpm@9.9.0 --activate
            pnpm config set store-dir .pnpm-store
      - run:
          name: Install Dependencies
          command: |
            pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - .pnpm-store

  attach-built-icons:
    steps:
      - attach_workspace:
          at: .

#################################################################################
# Jobs
#################################################################################
jobs:
  build-icons:
    <<: *default_executor

    parameters:
      cache-version:
        type: string
        default: v1
        description: Change the .tsbuildinfo cache version if you need to clear the cache for any reason.

    steps:
      - pre-setup
      - attach-built-icons
      - restore_cache:
          name: 'Restoring build cache'
          keys:
            - big-design-icons-<<parameters.cache-version>>-{{ .Branch }}
            - big-design-icons-<<parameters.cache-version>>
      - run: pnpm build --filter @bigcommerce/big-design-icons
      - save_cache:
          name: 'Saving build cache'
          key: big-design-icons-<<parameters.cache-version>>-{{ .Branch }}
          paths:
            - packages/big-design-icons/.tsbuildinfo
            - packages/big-design-icons/dist
      - persist_to_workspace:
          root: .
          paths:
            - packages/big-design-icons/dist

  build-theme:
    <<: *default_executor

    steps:
      - pre-setup
      - run: pnpm build --filter @bigcommerce/big-design-theme

  build-big-design:
    <<: *default_executor

    steps:
      - pre-setup
      - attach-built-icons
      - run: pnpm build --filter @bigcommerce/big-design

  build-examples:
    <<: *default_executor

    steps:
      - pre-setup
      - attach-built-icons
      - run: pnpm build --filter @bigcommerce/examples

  build-docs:
    <<: *default_executor

    parameters:
      cache-version:
        type: string
        default: v1
        description: Change the next.js cache version if you need to clear the cache for any reason.

    steps:
      - pre-setup
      - attach-built-icons
      - restore_cache:
          keys:
            - nextjs-<<parameters.cache-version>>-{{ checksum "package.json" }}-{{ checksum "pnpm-lock.yaml" }}
            - nextjs-<<parameters.cache-version>>-{{ checksum "package.json" }}
            - nextjs-<<parameters.cache-version>>
      - run: pnpm build --filter @bigcommerce/docs
      - save_cache:
          key: nextjs-<<parameters.cache-version>>-{{ checksum "package.json" }}-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - packages/docs/.next

  build-patterns:
    <<: *default_executor

    steps:
      - pre-setup
      - run: pnpm build --filter @bigcommerce/big-design-patterns

  commitlint:
    <<: *default_executor

    steps:
      - pre-setup
      - run:
          name: "Set Pull Request Variables"
          command: |
            DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
            
            if [ "$CIRCLE_PULL_REQUEST" ]; then
              git fetch origin refs/pull/${CIRCLE_PULL_REQUEST##*/}/merge
            
              BASE_SHA1=`git rev-parse FETCH_HEAD^1`
            elif [ "$DEFAULT_BRANCH" ]; then
              echo "Not a pull request, so getting merge base from default branch $DEFAULT_BRANCH instead."
              BASE_SHA1=$DEFAULT_BRANCH
            fi
            
            if [ -z "$BASE_SHA1" ]; then
              echo 'Not a pull request and could not identify default branch, skipping.'
              exit 0
            fi
            
            MERGE_BASE_SHA1=`git merge-base $BASE_SHA1 $CIRCLE_SHA1`
            echo "export BASE_SHA1=${BASE_SHA1}" >> $BASH_ENV
            echo "export MERGE_BASE_SHA1=${MERGE_BASE_SHA1}" >> $BASH_ENV
      - run:
          name: Validate Commits
          command: |
            if [ -z "$MERGE_BASE_SHA1" ]; then
              exit 0;
            fi

            pnpm commitlint --from ${MERGE_BASE_SHA1} --to ${CIRCLE_SHA1} --verbose

  typecheck:
    <<: *default_executor

    steps:
      - pre-setup
      - attach-built-icons
      - run: pnpm typecheck

  lint:
    <<: *default_executor

    steps:
      - pre-setup
      - attach-built-icons
      - run: pnpm lint

  test:
    <<: *default_executor

    steps:
      - pre-setup
      - attach-built-icons
      - run: pnpm ci:test

#################################################################################
# Workflows
#################################################################################
workflows:
  version: 2
  build_and_test:
    jobs:
      - commitlint:
          <<: *filter_branch

      - build-icons:
          <<: *filter_branch

      - build-theme:
          <<: *filter_branch

      - build-big-design:
          <<: *filter_branch
          requires:
            - build-icons

      - build-patterns:
          <<: *filter_branch
          requires:
            - build-icons

      - build-examples:
          <<: *filter_branch
          requires:
            - build-icons

      - build-docs:
          <<: *filter_branch
          requires:
            - build-icons

      - typecheck:
          <<: *filter_branch
          requires:
            - build-icons

      - lint:
          <<: *filter_branch
          requires:
            - build-icons

      - test:
          <<: *filter_branch
          requires:
            - build-icons
